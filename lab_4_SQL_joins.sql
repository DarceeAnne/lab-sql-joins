
#List the number of films per category.
SELECT c.name AS category_name, COUNT(f.film_id) AS number_of_films
FROM film_category f
LEFT JOIN category c 
ON f.category_id = c.category_id
GROUP BY c.name;

#Retrieve the store ID, city, and country for each store.
SELECT s.store_id, city.city, c.country
FROM store s
JOIN address a ON s.address_id = a.address_id
JOIN city ON a.city_id = city.city_id
JOIN country c ON city.country_id = c.country_id
GROUP BY s.store_id;


#Calculate the total revenue generated by each store in dollars.
SELECT s.store_id, SUM(p.amount) as store_revenue
FROM store s
JOIN inventory i ON s.store_id = i.store_id
JOIN rental r ON i.inventory_id = r.inventory_id
JOIN payment p ON r.rental_id = p.rental_id
GROUP BY s.store_id;

#Determine the average running time of films for each category.
SELECT c.name AS category_name, ROUND(AVG(f.length),0) AS avg_film_duration
FROM film f
JOIN film_category fc ON f.film_id = fc.film_id
JOIN category c ON fc.category_id = c.category_id
GROUP BY c.name;

#Identify the film categories with the longest average running time.
SELECT c.name AS category_name, ROUND(AVG(f.length),0) AS avg_film_duration
FROM film f
JOIN film_category fc ON f.film_id = fc.film_id
JOIN category c ON fc.category_id = c.category_id
GROUP BY c.name
ORDER BY avg_film_duration DESC;
#The following are the top five categories with longest film duration: Games, Sports, Foreign, Drama, and comedy.

#Display the top 10 most frequently rented movies in descending order.
SELECT f.title, COUNT(r.inventory_id) as rental_count
FROM rental r 
JOIN inventory i ON r.inventory_id = i.inventory_id
JOIN film f ON i.film_id = f.film_id
GROUP BY f.title
ORDER BY rental_count desc
LIMIT 10;

SELECT * FROM category;
SELECT * FROM film_category;
SELECT * FROM film;
SELECT * FROM store;
SELECT * FROM address;
SELECT * FROM country;
SELECT * FROM city;
SELECT * FROM store;
SELECT * FROM inventory;
SELECT * FROM rental;
SELECT * FROM payment;

#Determine if "Academy Dinosaur" can be rented from Store 1.
SELECT f.title
FROM film f
JOIN inventory i ON f.film_id = i.film_id
JOIN store s ON i.store_id = s.store_id
WHERE f.title = 'Academy Dinosaur' AND s.store_id = 1;
#Yes, ACADEMY DINOSAUR can be rented from store 1.

#Provide a list of all distinct film titles, along with their availability status in the inventory. 
#Include a column indicating whether each title is 'Available' or 'NOT available.' 
#Note that there are 42 titles that are not in the inventory, and this information can be obtained using a CASE statement combined with IFNULL."

SELECT * FROM film;
SELECT * FROM inventory;
SELECT * FROM rental;
    
SELECT
    f.title,
    IFNULL(
        CASE
            WHEN MAX(r.return_date) IS NOT NULL AND MAX(r.return_date) > MAX(r.rental_date) THEN 'Available'
            ELSE 'Not Available'
        END,
        'Not Available'
    ) AS availability_status
FROM
    film f
LEFT JOIN
    inventory i ON f.film_id = i.film_id
LEFT JOIN
    rental r ON i.inventory_id = r.inventory_id
GROUP BY
    f.title;

